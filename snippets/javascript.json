{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"if cond": {
		"prefix": "if",
		"body": [
			"if ($1) {",
			"\t$0",
			"}"
		],
		"description": "if condition"
	},
	
	"if error": {
		"prefix": "iferr",
		"body": [
			"if ($1) throw new Error('$0')"
		],
		"description": "if condition is true throw exception"
	},

	"then": {
		"prefix": "then block",
		"body": [
			".then($1 => {",
			"\t$0",
			"})"
		],
		"description": "then block"
	},

	"catch": {
		"prefix": "catch block",
		"body": [
			".catch(err => {",
			"\tconsole.log(err)",
			"})"
		],
		"description": "catch block"
	},

	"then and catch": {
		"prefix": "thencatch",
		"body": [
			".then($1 => {",
			"\t$0",
			"})",
			".catch(err => {",
			"\tconsole.log(err)",
			"})"
		],
		"description": "then and catch"
	}
}